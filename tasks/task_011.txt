# Task ID: 11
# Title: Rename Project Structure from ChromeConnect to WebConnect
# Status: done
# Dependencies: None
# Priority: high
# Description: Systematically rename all project directories, files, and references from ChromeConnect to WebConnect, including updating build scripts and project files to reflect the new naming convention.
# Details:
1. Update directory structure:
   - Rename src/ChromeConnect to src/WebConnect
   - Rename any other directories containing "ChromeConnect" in their path
   - Ensure all nested directories maintain their structure

2. Update project files:
   - Rename all .csproj files from ChromeConnect*.csproj to WebConnect*.csproj
   - Update the contents of .csproj files to reflect new project names
   - Modify assembly names, root namespaces, and package IDs in project files
   - Update AssemblyInfo.cs files with new assembly names and product information

3. Update code references:
   - Use global search and replace to update namespace declarations from ChromeConnect to WebConnect
   - Update using statements referencing ChromeConnect namespaces
   - Update any hardcoded string references to "ChromeConnect" in code

4. Update build system:
   - Modify build.ps1/build.sh scripts to reference new project names
   - Update CI/CD pipeline configurations (.github/workflows, azure-pipelines.yml, etc.)
   - Update publish profiles and deployment scripts with new naming
   - Ensure all path references in build scripts are updated

5. Update solution files:
   - Rename solution files if they contain "ChromeConnect"
   - Update solution file contents to reference renamed projects

6. Update configuration files:
   - Modify app.config/web.config files with new assembly references
   - Update any JSON configuration files with new component names
   - Check for environment variable references that might need updating

7. Update documentation references:
   - Search for "ChromeConnect" in documentation files and update to "WebConnect"
   - Update any diagrams or images that reference the old name

8. Verify references in external systems:
   - Check for any external system configurations that might reference ChromeConnect
   - Update deployment scripts used by operations teams

9. Commit changes in logical groups:
   - Make commits in stages (directory structure, project files, code references, etc.)
   - Provide detailed commit messages explaining the changes

# Test Strategy:
1. Verify project structure integrity:
   - Ensure all directories have been properly renamed
   - Confirm no orphaned files or directories containing old naming remain

2. Build verification:
   - Execute a clean build of the entire solution to verify all references are correct
   - Ensure the build completes without errors or warnings related to missing references

3. Runtime testing:
   - Launch the application and verify it starts correctly
   - Test all major functionality to ensure the renaming didn't break any features
   - Verify logging and diagnostics show the new application name

4. Deployment testing:
   - Execute the deployment scripts to verify they correctly deploy the renamed application
   - Verify the application deploys to the correct locations with proper naming
   - Test the deployed application to ensure it functions correctly

5. Integration testing:
   - Test integration with any external systems to ensure they can still communicate with the renamed application
   - Verify any APIs or services exposed by the application are still accessible

6. Documentation verification:
   - Review all documentation to ensure all references to ChromeConnect have been updated
   - Verify README files and other project documentation reflect the new naming

7. Version control validation:
   - Review the git history to ensure all files have been properly renamed (not just deleted and recreated)
   - Verify that git blame and history tracking is preserved

8. Regression testing:
   - Run the full test suite to ensure all functionality works as expected
   - Compare test results with pre-rename results to identify any regressions

# Subtasks:
## 1. Rename Directory Structure [done]
### Dependencies: None
### Description: Use git mv to rename all directories from ChromeConnect to WebConnect while preserving Git history
### Details:
- Rename src/ChromeConnect/ to src/WebConnect/
- Rename src/ChromeConnect.Launcher/ to src/WebConnect.Launcher/
- Rename ChromeConnect.Console/ to WebConnect.Console/
- Rename tests/ChromeConnect.Tests/ to tests/WebConnect.Tests/
- Use git mv commands to preserve history

## 2. Rename Project Files (.csproj) [done]
### Dependencies: 11.1
### Description: Rename all .csproj files from ChromeConnect to WebConnect naming
### Details:
- ChromeConnect.csproj → WebConnect.csproj
- ChromeConnect.Launcher.csproj → WebConnect.Launcher.csproj
- ChromeConnect.Console.csproj → WebConnect.Console.csproj
- ChromeConnect.Tests.csproj → WebConnect.Tests.csproj

## 3. Update Project File Contents [done]
### Dependencies: 11.2
### Description: Update assembly names, titles, and metadata within all .csproj files
### Details:
- Update <AssemblyTitle> from ChromeConnect to WebConnect
- Update <AssemblyProduct> references
- Update <AssemblyName> from ChromeConnect to WebConnect
- Update <Copyright> notices
- Update <AssemblyCompany> if applicable

## 4. Update Project References [done]
### Dependencies: 11.3
### Description: Update all <ProjectReference> elements in .csproj files to point to renamed projects
### Details:
- Update references in test projects to point to WebConnect projects
- Update references in console project to main WebConnect project
- Update launcher project references
- Verify all project dependency paths are correct

## 5. Update Build Script Paths [done]
### Dependencies: 11.4
### Description: Update all build scripts to reference new project paths and names
### Details:
- Update build-verify.ps1 script paths
- Update paths in publish.ps1 and publish.bat
- Update test script paths (run-tests.ps1)
- Update deployment script paths
- Update any CI/CD configuration files

